#!/bin/bash

trap 'exit' ERR

SCRIPT_DIR="$( cd "$( dirname "${BASH_SOURCE[0]}" )" && pwd )"
readonly WORKING_DIR="$PWD"
source "$SCRIPT_DIR/variables"

function minify_html {
    local file="$1"
    echo "Minifying $file..."
    html-minifier \
        --decode-entities \
        --html5 \
        --keep-closing-slash \
        --minify-css \
        --minify-js \
        --remove-comments \
        --remove-redundant-attributes \
        --collapse-whitespace \
        --output "$file" \
        "$file"
}
export -f minify_html

function minify_css {
    local file="$1"
    echo "Minifying $file..."
    cleancss --output "$file" "$file"
}
export -f minify_css


echo "Building ${DIST_NAME}..."

# set the modified times on website files to that of the last commit
# that modified them, which helps identify changes, and ensure the
# minimum amount is uploaded during deployment
cd "$WEBSITE_DIR"
git ls-files | while read file
do
    time=$(git log --pretty=format:%cd -n 1 --date=iso -- "$file")
    time=$(date -u -d "$time" +%Y%m%d%H%M.%S)
    echo "Changing $file's time to $time"
    touch -m -t "$time" "$file"
done
cd "$WORKING_DIR"

if [[ -d $DIST_DIR ]]; then
    echo "Distribution directory already exists" >&2
    exit 1
fi

mkdir "$DIST_DIR"

# create the directory that could be deployed
rsync -a --exclude '*.psd' --prune-empty-dirs "$WEBSITE_DIR/" "$DIST_DIR"

# minify
find "$DIST_DIR" -type f -name '*.html' -o -name '*.xhtml' -exec bash -c 'minify_html "$0"' {} \;
find "$DIST_DIR" -type f -name '*.css' -exec bash -c 'minify_css "$0"' {} \;

echo "Distribution created in $DIST_DIR"

# create a distribution archive for GitHub in case we're building a tag
GZIP=-9 tar -czf "$DIST_ARCHIVE" -C "$WEBSITE_DIR" .
echo "Distribution archive created at $DIST_ARCHIVE"
